{"ast":null,"code":"const axios = require('axios');\n\nconst getUsers = async () => {\n  let nextPage = true;\n  let url = 'https://swapi.co/api/people';\n  let customers = [];\n\n  while (nextPage) {\n    const response = await axios.get(url).catch(error => console.log(error));\n    const recordsOnPage = response.data.results.map(element => {\n      return element.name;\n    });\n    customers = [...customers, ...recordsOnPage];\n\n    if (response.data.next) {\n      url = response.data.next;\n    } else {\n      nextPage = false;\n    }\n  }\n\n  console.log(customers);\n  return customers;\n};\n\ngetUsers();\nmodule.exports = {\n  getSwapiUsers\n};","map":{"version":3,"sources":["/home/pacheco/Apps/react-apps/debts-manager/src/services/swapi.js"],"names":["axios","require","getUsers","nextPage","url","customers","response","get","catch","error","console","log","recordsOnPage","data","results","map","element","name","next","module","exports","getSwapiUsers"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AAE1B,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,GAAG,GAAG,6BAAV;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAOF,QAAP,EAAiB;AAEd,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUH,GAAV,EACnBI,KADmB,CACZC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADE,CAAvB;AAGA,UAAMG,aAAa,GAAGN,QAAQ,CAACO,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA2BC,OAAD,IAAa;AAC1D,aAAOA,OAAO,CAACC,IAAf;AACF,KAFqB,CAAtB;AAIAZ,IAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAe,GAAGO,aAAlB,CAAZ;;AAEA,QAAIN,QAAQ,CAACO,IAAT,CAAcK,IAAlB,EAAwB;AACrBd,MAAAA,GAAG,GAAGE,QAAQ,CAACO,IAAT,CAAcK,IAApB;AACF,KAFD,MAEO;AACJf,MAAAA,QAAQ,GAAG,KAAX;AACF;AACH;;AACDO,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,SAAOA,SAAP;AACF,CAzBD;;AA2BAH,QAAQ;AAERiB,MAAM,CAACC,OAAP,GAAiB;AAAEC,EAAAA;AAAF,CAAjB","sourcesContent":["const axios = require('axios')\n\nconst getUsers = async () => {\n\n   let nextPage = true;\n   let url = 'https://swapi.co/api/people'\n   let customers = []\n\n   while (nextPage) {\n\n      const response = await axios.get(url)\n         .catch((error) => console.log(error))\n\n      const recordsOnPage = response.data.results.map((element) => {\n         return element.name\n      })\n\n      customers = [...customers, ...recordsOnPage]\n\n      if (response.data.next) {\n         url = response.data.next\n      } else {\n         nextPage = false\n      }\n   }\n   console.log(customers)\n   return customers\n}\n\ngetUsers()\n\nmodule.exports = { getSwapiUsers }"]},"metadata":{},"sourceType":"module"}